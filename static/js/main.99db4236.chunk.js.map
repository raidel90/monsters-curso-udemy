{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,G,kBAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,mCAAML,EAAMG,QAAQG,QACpB,mCAAMN,EAAMG,QAAQI,cCHfC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SAEFD,EAAMS,SAASC,KACZ,SAAAP,GAAO,OAAQ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLjCO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCyCCG,E,kDA1Cd,aAAc,IAAD,8BAEZ,gBAkBFH,aAAe,SAAAI,GAAC,OAAK,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAhBtD,EAAKC,MAAM,CACLb,SAAU,GACVU,YAAY,IANR,E,gEAUM,IAAD,OAEjBI,MAAM,8CAEDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAMnC,IAAD,EAEwBC,KAAKN,MAA5Bb,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACXU,EAAiBpB,EAASqB,QAAQ,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAErG,OAEM,sBAAK9B,UAAU,MAAf,UAEE,oDAEA,cAAC,EAAD,CAAWW,YAAY,wBAAwBC,aAAce,KAAKf,eAElE,cAAC,EAAD,CAAUJ,SAAUoB,W,GArCZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.99db4236.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\n\nexport const Card = props => (\n    <div className=\"card-container\">\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"Monster\"/>\n        <h2> {props.monster.name}</h2>\n        <h3> {props.monster.email}</h3>\n\n    </div>\n);","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\nexport const CardList = props => {\n    return <div className='card-list'> \n      {\n         props.monsters.map( \n            monster  =>  ( <Card key={monster.id} monster={monster}/> )\n         )\n         \n      }\n\n    </div>\n}","import React from 'react';\nimport './search-box.style.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input\n    className='search'\n    type='search'\n    placeholder={placeholder}\n    onChange={handleChange}\n   />\n);","import React,{Component} from 'react'; \nimport './App.css';\nimport {  CardList} from \"./components/card-list/card-list.component\";\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component{\n\n constructor(){\n  \n  super();\n\n    this.state={\n          monsters: [],\n          searchField:''\n    };\n}\n\ncomponentDidMount(){\n  \n  fetch('https://jsonplaceholder.typicode.com/users')\n\n      .then(response => response.json())\n\n      .then(users => this.setState({monsters: users}));\n\n}\n\nhandleChange = e => (this.setState({searchField: e.target.value}));\n\n  render(){\n\n    const {monsters, searchField}=this.state;\n    const filteredMonsters=monsters.filter( monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n   \n  return(\n\n        <div className=\"App\">\n          \n          <h1>Monstruos de React</h1>\n          \n          <SearchBox placeholder='Buscando monstruos...' handleChange={this.handleChange} />\n\n          <CardList monsters={filteredMonsters} />\n      \n       </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}